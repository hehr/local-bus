apply plugin: 'com.android.library'
apply plugin: 'com.google.protobuf'

repositories {
    mavenCentral()
}

def code = '1.0.3'
def moduleName = 'local-bus'
def releaseName = moduleName + "_" + code + "_" + releaseTime()
def outPath = 'output/'
def zipFile = file('build/intermediates/shrunk_classes/release/shrunkClasses.jar')

android {

    compileSdkVersion 26
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 26
        versionCode 1
        versionName releaseName
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
            resources {
                srcDir 'src/../lib'
            }
            proto {
                srcDir 'src/main/proto' //指定.proto文件路径
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

protobuf {
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.2.0'
    }
    plugins {
        javalite {
            // The codegen for lite comes as a separate artifact
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
            }
        }
    }
}


dependencies {

    //protobuf
    implementation "com.google.protobuf:protobuf-lite:3.0.1"
    //netty
    implementation "io.netty:netty-all:4.1.52.Final"

}

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+08:00"))
}


task clear(type: Delete) {
    delete outPath
}

task makeJar(type: Jar) {
    from zipTree(zipFile)
    from fileTree(dir: 'src/main', includes: ['assets/'])
    baseName = releaseName
    destinationDir = file(outPath)
}

makeJar.dependsOn(clear, build)



